[

    {lager, [
        {handlers, [
            {lager_console_backend, [debug, true]},
            {lager_file_backend, [
                {"console.log", info, 10485760, "$D0", 5}
            ]}
        ]}
    ]},
    
    {websinema, [
        
        {websinema_aggregator, [

            %% Logging level of the SNMP manager itself.
            %% Useful for debugging purposes.
            {verbose, info},
            
            %% A directory under application private where to store SNMP manager specific files.
            {manager_dir, "manager"},
            
            %% SNMP manager's listener congfiguration.
            {manager_config, [
                {address, [0, 0, 0, 0]},
                {port, 7680}
            ]},
            
            %% Versions of the protocol to support.
            {versions, [v1, v2]},
            
            %% External MIB binaries.
            %% Pass there single strings in order to import mibs located under application private.
            %% Or tuple like these below to import mibs from otp applications.
            {mibs, [
                {otp_mibs, "OTP-REG"}, 
                {otp_mibs, "OTP-TC"}, 
                {otp_mibs, "OTP-MIB"},
                {os_mon, "OTP-OS-MON-MIB"} 
            ]},
            
            %% Initially registered SNMP agents
            %% Pass name along with remote host, port and community.
            {agents, [
                %% {"name", {"address.com", 161, "community"}}
            ]},
            
            %% Observation options.
            {observation, [
            
                %% How frequently to poll active agent objects
                {interval, 1000},
                
                %% A size of buffer to store backlog on object measures
                {backlog, 1000},
                
                %% True to start observers initially suspended. Thus they will be activated on demand.
                %% False to start observers permanently active.
                {suspended, true},
                
                %% Set to true in order to overcome any fails while polling.
                {failover, true},
                
                %% Rules of how to watch over objects.
                %% Maps type to rule. If not specified for a type it assumed that {poll, actual} was passed.
                {rules, [
                    {integer, {watch, buffer}},
                    {ticks, {watch, actual}},
                    {timestamp, {watch, actual}}
                ]}
                
            ]}
            
        ]}
        
    ]}
  
].
